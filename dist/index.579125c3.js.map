{"mappings":"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","sources":["src/index.js"],"sourcesContent":["const searchForm = document.getElementById(\"search-form\");\nconst searchInput = document.getElementById(\"search-input\");\n\nsearchForm.addEventListener(\"submit\", (e) => {\n  // get search term\n  const searchTerm = searchInput.value;\n  // get sort\n  const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\n  // get limit\n  const searchLimit = document.getElementById(\"limit\").value;\n\n  // check input\n  if (!searchTerm) {\n    // show message\n    showMessage(\"Please add a search term\", \"alert-danger\");\n  }\n\n  // clear input\n  searchInput.value = \"\";\n\n  // search reddit\n  searchReddit(searchTerm, searchLimit, sortBy).then((results) => {\n    let output = '<div class=\"card-columns\">';\n\n    // loop through posts\n    results.forEach((post) => {\n      // check for image\n      const image = post.preview\n        ? post.preview.images[0].source.url\n        : \"https://blockbuild.africa/wp-content/uploads/2021/12/reddit.jpg\";\n      output += `\n      <div class=\"card\">\n        <img src=\"${image}\" class=\"card-img-top\" alt=\"...\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">${post.title}</h5>\n          <p class=\"card-text\">${truncateText(post.selftext, 100)}</p>\n          <a href=\"${\n            post.url\n          }\" target=\"_blank\" class=\"btn btn-primary\">Read More</a>\n          <hr>\n          <span class=\"badge badge-secondary\">Subreddit: ${\n            post.subreddit\n          }</span>\n          <span class=\"badge badge-dark\">Score: ${post.score}</span>\n        </div>\n      </div>\n      `;\n    });\n\n    output += \"</div>\";\n\n    document.getElementById(\"results\").innerHTML = output;\n  });\n\n  e.preventDefault();\n});\n\n// show message\nfunction showMessage(message, className) {\n  // create div\n  const div = document.createElement(\"div\");\n  // add classes\n  div.className = `alert ${className}`;\n  // add text\n  div.appendChild(document.createTextNode(message));\n  // get parent element\n  const searchContainer = document.getElementById(\"search-container\");\n  // get search\n  const search = document.getElementById(\"search\");\n\n  // insert message\n  searchContainer.insertBefore(div, search);\n\n  // Timeout alert\n  setTimeout(() => document.querySelector(\".alert\").remove(), 3000);\n}\n\n// Search Reddit\nfunction searchReddit(searchTerm, searchLimit, sortBy) {\n  return fetch(\n    `http://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`\n  )\n    .then((res) => res.json())\n    .then((data) => data.data.children.map((data) => data.data))\n    .catch((err) => console.log(err));\n}\n\n// async function searchReddit(searchTerm, searchLimit, sortBy) {\n//   try {\n//     const res = await fetch(\n//       `http://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`\n//     );\n//     const data = await res.json();\n//     return data.data.children.map((data_1) => data_1.data);\n//   } catch (err) {\n//     return console.log(err);\n//   }\n// }\n\n// Truncate text\nfunction truncateText(text, limit) {\n  const shortened = text.indexOf(\" \", limit);\n  if (shortened === -1) return text;\n  return text.substring(0, shortened);\n}\n"],"names":[],"version":3,"file":"index.579125c3.js.map","sourceRoot":"/__parcel_source_root/"}